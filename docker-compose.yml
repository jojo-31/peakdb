version: "3"
services:
  flask:
    container_name: flask
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: "prod"
      APP_DEBUG: "False"
      MONGODB_DATABASE: peaks
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: your_mongodb_password
      MONGODB_HOSTNAME: mongodb
      MONGODB_PORT: 27017
    volumes:
      - .:/code
    depends_on:
      - mongodb
    networks:
      - backend

  mongodb:
    image: mongo:4.2.6
    container_name: mongodb
    restart: unless-stopped
    command: mongod
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      MONGO_INITDB_ROOT_PASSWORD: your_mongodb_root_password
      MONGO_INITDB_DATABASE: peaks
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
